<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
			 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
			 xmlns:viewmodels="clr-namespace:polyclinic.UI.ViewModels"
			 xmlns:models="clr-namespace:polyclinic.Domain.Entities;assembly=polyclinic.Domain"
			 xmlns:converters="clr-namespace:polyclinic.UI.ValueConverters"
			 xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
			 x:DataType="viewmodels:AppointmentsViewModel"
			 x:Class="polyclinic.UI.Views.AppointmentsView"
			 Title="AppointmentsView">
	<ContentPage.Behaviors>
		<toolkit:EventToCommandBehavior EventName="NavigatedTo"
										Command="{Binding UpdateAppointmentsListCommand}"/>
	</ContentPage.Behaviors>
	<ContentPage.Resources>
		<ResourceDictionary>
			<converters:StatusToColorValueConverter x:Key="ColorConverter"/>
			<converters:ComparisonConverter x:Key="ComparisonConverter"/>
            <converters:TimeValueConverter x:Key="TimeConverter"/>
            <converters:DateValueConverter x:Key="DateConverter"/>
            <converters:StatusValueConverter x:Key="StatusConverter"/>
        </ResourceDictionary>
	</ContentPage.Resources>
	<ContentPage.ToolbarItems>
		<ToolbarItem
			IconImageSource="add.png"
			Command="{Binding AddAppointmentCommand}"/>
	</ContentPage.ToolbarItems>
	<ScrollView>
		<VerticalStackLayout
			Margin="10"
			Spacing="10">
            
            <!-- Filter choice -->

            <HorizontalStackLayout>
                <RadioButton Content="All" 
							 IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource ComparisonConverter}, 
					ConverterParameter={x:Static viewmodels:AppointmentsViewModel+Filter.All}}">
                    <RadioButton.Behaviors>
                        <toolkit:EventToCommandBehavior EventName="CheckedChanged"
														Command="{Binding UpdateAppointmentsListCommand}"/>
                    </RadioButton.Behaviors>
                </RadioButton>
                <RadioButton Content="Upcoming" 
							 IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource ComparisonConverter}, 
					ConverterParameter={x:Static viewmodels:AppointmentsViewModel+Filter.Upcoming}}">
                    <RadioButton.Behaviors>
                        <toolkit:EventToCommandBehavior EventName="CheckedChanged"
														Command="{Binding UpdateAppointmentsListCommand}"/>
                    </RadioButton.Behaviors>
                </RadioButton>
                <RadioButton Content="Approved" 
							 IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource ComparisonConverter}, 
					ConverterParameter={x:Static viewmodels:AppointmentsViewModel+Filter.Approved}}">
                    <RadioButton.Behaviors>
                        <toolkit:EventToCommandBehavior EventName="CheckedChanged"
														Command="{Binding UpdateAppointmentsListCommand}"/>
                    </RadioButton.Behaviors>
                </RadioButton>
                <RadioButton Content="Payment required" 
							 IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource ComparisonConverter}, 
					ConverterParameter={x:Static viewmodels:AppointmentsViewModel+Filter.Payment}}">
                    <RadioButton.Behaviors>
                        <toolkit:EventToCommandBehavior EventName="CheckedChanged"
														Command="{Binding UpdateAppointmentsListCommand}"/>
                    </RadioButton.Behaviors>
                </RadioButton>
                <RadioButton Content="History" 
							 IsChecked="{Binding Path=SelectedFilter, Converter={StaticResource ComparisonConverter}, 
					ConverterParameter={x:Static viewmodels:AppointmentsViewModel+Filter.History}}">
                    <RadioButton.Behaviors>
                        <toolkit:EventToCommandBehavior EventName="CheckedChanged"
														Command="{Binding UpdateAppointmentsListCommand}"/>
                    </RadioButton.Behaviors>
                </RadioButton>
            </HorizontalStackLayout>

            <DatePicker
                Date="{Binding SelectedDate}"
                Format="dd/mm/yyyy"
                IsVisible="{Binding DateVisible}">
                <DatePicker.Behaviors>
                    <toolkit:EventToCommandBehavior EventName="DateSelected"
													Command="{Binding UpdateAppointmentsListCommand}"/>
                </DatePicker.Behaviors>
            </DatePicker>

            <!-- Appointments -->
            
            <CollectionView
				ItemsSource="{Binding Appointments}">
				<CollectionView.ItemTemplate>
					<DataTemplate x:DataType="models:Appointment">
						<Frame
							Margin="0,2.5">
							<Frame.GestureRecognizers>
								<TapGestureRecognizer
									Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:AppointmentsViewModel} },
									Path=ShowAppointmentDetailsCommand}"
									CommandParameter="{Binding}"/>
							</Frame.GestureRecognizers>
							<Grid ColumnDefinitions="Auto,10,8,10,*,*">
                                <StackLayout Spacing="10"
											 Grid.Column="0">
                                    <Label Text="{Binding AppointmentDate, Converter={StaticResource TimeConverter}}"/>
                                    <Label Text="{Binding AppointmentDate, Converter={StaticResource DateConverter}}"/>
                                </StackLayout>
                                <RoundRectangle Grid.Column="2"
                                                CornerRadius="3"
                                                Fill="{Binding AppointmentStatus, Converter={StaticResource ColorConverter}}"/>
                                <StackLayout Spacing="10"
											 Grid.Column="4">
                                    <Label Text="{Binding Client.FullName, StringFormat='Client: {0}'}"/>
                                    <Label Text="{Binding AppointmentStatus, Converter={StaticResource StatusConverter}, StringFormat='Status: {0}'}"/>
                                </StackLayout>
								<StackLayout Spacing="10"
											 Grid.Column="5">
									<Label Text="{Binding Doctor.FullName, StringFormat='Doctor: {0}'}"/>
									<Label Text="{Binding Doctor.Specialization, StringFormat='Specialization: {0}'}"/>
								</StackLayout>
							</Grid>
						</Frame>
					</DataTemplate>
				</CollectionView.ItemTemplate>
			</CollectionView>
		</VerticalStackLayout>
	</ScrollView>
</ContentPage>